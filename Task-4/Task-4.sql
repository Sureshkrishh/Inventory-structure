
-- # TASK-4 # --

-- USE INVENTORY;

-- DROPING THE EXISTING PROCEDURE BEFORE RE-CREATING IT
DROP PROCEDURE ADDPRO;
DROP PROCEDURE ADDSUPPLIER;
DROP PROCEDURE ADDCUST;
DROP PROCEDURE ADDORDER;

-- DELETING THE EXISTING DATA FROM THE TABLE
DELETE FROM PRODUCT;
DELETE FROM SUPPLIER;
DELETE FROM CUSTOMER;
DELETE FROM ORDERS;

--------------------

CREATE FUNCTION AUTOGENID (@ALP AS CHAR(1), @NUM AS INT)
RETURNS CHAR(5)
AS
BEGIN
	DECLARE @ALNUM AS CHAR(5)

	IF @NUM < 10
		SET @ALNUM = CONCAT(@ALP,'000',@NUM)
	ELSE IF @NUM < 100
		SET @ALNUM = CONCAT(@ALP,'00',@NUM)
	ELSE IF @NUM < 1000
		SET @ALNUM = CONCAT(@ALP,'0',@NUM)
	ELSE IF @NUM < 10000
		SET @ALNUM = CONCAT(@ALP,@NUM)
	ELSE
		SET @ALNUM = 'ERROR'

	RETURN @ALNUM
END;

-- CHECKING THE CREATED FUNCTION
SELECT DBO.AUTOGENID('P',200) AS 'AUTO GENERATED ID';

---------------

CREATE SEQUENCE IDS
AS INT
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 9999;




CREATE PROCEDURE ADDSUPPLIER @NAME VARCHAR(30), @ADDR VARCHAR(70), 
				 @CITY VARCHAR(20), @PHONE CHAR(14), @MAIL VARCHAR(40)
AS
BEGIN
	DECLARE @ID AS CHAR(5)
	DECLARE @VALUE AS INT
	SET @VALUE = NEXT VALUE FOR IDS

	IF @VALUE < 10
		SET @ID = CONCAT('S000',@VALUE)
	ELSE IF @VALUE < 100
		SET @ID = CONCAT('S00',@VALUE)
	ELSE IF @VALUE < 10
		SET @ID = CONCAT('S0',@VALUE)
	ELSE IF @VALUE < 10
		SET @ID = CONCAT('S',@VALUE)

	INSERT INTO SUPPLIER
	VALUES(@ID, @NAME, @ADDR, @CITY, @PHONE, @MAIL);
	SELECT * FROM SUPPLIER
	WHERE SID = @ID
END;

-- CHECKING THE CREATED PROCEDURE
ADDSUPPLIER 'DOT AND DASH ELECTRONICS', 'No.11 ponni nagar, pammal', 
			'Chennai', 9443024895,'support@dnd.com';

--------------------

CREATE SEQUENCE IDP
AS INT
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 9999;

CREATE PROCEDURE ADDPRO @PDESC VARCHAR(60), @PRICE INT, 
				 @CATEGORY VARCHAR(30), @SID CHAR(5)
AS
BEGIN
	DECLARE @ID AS CHAR(5)
	DECLARE @VALUE AS INT
	SET @VALUE = (NEXT VALUE FOR IDP)

	IF @VALUE < 10
		SET @ID = CONCAT('P000',@VALUE)
	ELSE IF @VALUE < 100
		SET @ID = CONCAT('P00',@VALUE)
	ELSE IF @VALUE < 10
		SET @ID = CONCAT('P0',@VALUE)
	ELSE IF @VALUE < 10
		SET @ID = CONCAT('P',@VALUE)

	INSERT INTO PRODUCT
	VALUES (@ID, @PDESC, @PRICE, @CATEGORY, @SID)
	SELECT * FROM PRODUCT
	WHERE PID = @ID;
END;

-- CHECKING THE CREATED PROCEDURE
ADDPRO 'iphone 11 pro',80000,'mobile','S0001';

--------------------

CREATE SEQUENCE IDC
AS INT
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 9999;

CREATE PROCEDURE ADDCUST @NAME AS VARCHAR(30), @ADDR AS VARCHAR(70), 
				 @CITY AS VARCHAR(30), @PHONE AS CHAR(14), @DATE AS DATE
AS
BEGIN 
	DECLARE @ID AS CHAR(5)
	DECLARE @VALUE AS INT
	SET @VALUE = (NEXT VALUE FOR IDC)

	IF @VALUE < 10
		SET @ID = CONCAT('C000',@VALUE)
	ELSE IF @VALUE < 100
		SET @ID = CONCAT('C00',@VALUE)
	ELSE IF @VALUE < 10
		SET @ID = CONCAT('C0',@VALUE)
	ELSE IF @VALUE < 10
		SET @ID = CONCAT('C',@VALUE)

	INSERT INTO CUSTOMER
	VALUES (@ID, @NAME, @ADDR, @CITY, @PHONE, @DATE);
	SELECT * FROM CUSTOMER 
	WHERE CID = @ID;
END;

-- CHECKING THE CREATED PROCEDURE
ADDCUST 'Krishna','chennai-001','chennai','9649871237','09-11-1997';

--------------------

CREATE SEQUENCE IDO
AS INT
START WITH 1
INCREMENT BY 1
MINVALUE 1
MAXVALUE 9999;

CREATE PROCEDURE ADDORDERS @DATE AS DATE, @CID AS CHAR(5), 
				 @PID AS CHAR(5), @QTY AS INT
AS
BEGIN 
	DECLARE @ID AS CHAR(5)
	DECLARE @VALUE AS INT
	SET @VALUE = (NEXT VALUE FOR IDO)

	IF @VALUE < 10
		SET @ID = CONCAT('O000',@VALUE)
	ELSE IF @VALUE < 100
		SET @ID = CONCAT('O00',@VALUE)
	ELSE IF @VALUE < 1000
		SET @ID = CONCAT('O0',@VALUE)
	ELSE IF @VALUE < 1000
		SET @ID = CONCAT('O',@VALUE)

	INSERT INTO ORDERS
	VALUES (@ID, @DATE, @CID, @PID, @QTY);

	SELECT * FROM ORDERS
	WHERE OID = @ID;
END;

-- CHECKING THE CREATED PROCEDURE
ADDORDERS '07-06-2021','C0001','P0001',2

--------------------

-- DISPLAYING ALL THE CREATED RECORDS
SELECT * FROM SUPPLIER;
SELECT * FROM PRODUCT;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;

